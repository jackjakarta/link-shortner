name: Build and Deploy Production

on:
  # push:
  #   branches: [main]

  workflow_dispatch:

jobs:
  # checks:
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version-file: '.nvmrc'

  #     - name: Install PNPM
  #       run: npm install -g pnpm@9.15.3

  #     - name: Install dependencies
  #       run: pnpm install
  #     - name: Check formatting
  #       run: pnpm format:check
  #     - name: Check types
  #       run: pnpm types
  #     - name: Check linter
  #       run: pnpm lint
  #     - name: Unit tests
  #       run: pnpm test

  build:
    runs-on: ubuntu-latest
    environment: production
    needs: checks

    steps:
      - name: Build and Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/jack/link-shortner
            git pull
            chmod +x fetch-env.sh && ./fetch-env.sh prod && \
            docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/klikr:production . && \
            docker push ${{ secrets.DOCKER_USERNAME }}/klikr:production

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build

    steps:
      - name: Build and Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/jack/link-shortner
            docker compose -f docker-compose.production.yml down && \
            docker compose -f docker-compose.production.yml up -d && \
            docker system prune -f
